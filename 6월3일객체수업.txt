1.복사생성자(const 레퍼런스 other)
-클래스도 똑같이 복사생성자 사용
= : 복사생성자함수가 호출
*동적할당 한 경우 동적사용 한 변수는 그대로 쓰던거 사용가능(메모리공간 안만듬)
명칭 : shallow copy

Player player(20,"",screen);
Player another(player);

Player(Player& other)
:GameObject(other.getPosition(),other.getFace(),other.getScreen()),hp(other.hp)
{
}

Screen& getScreen()  //반환 값을 Screen으로하면 새로 복사된 screen정보를 가져오게된다.
{                          //Screen에 레퍼런스 필수 사용
return screen;
}

sum함수 복사생성자 6번호출(포인터,레퍼런스 사용안할경우)

함수구현 후 스택 공간 만들고 return 주소값,함수메모리공간,매개변수공간1,매개변수공간2,
                                      +연산해주는공간+복사할메모리공간
explicit 생성자함수 : 대입연산자(=) 쓰지말고 생성자함수 호출하는것 알려주는 것(강제로)
extern 링크과정에서 다른파일에 변수 사용할 경우 사용
2.static 
c에서만 적용
static 지역변수 - 전역변수로 바뀐다 함수내에서만 볼수있다 
static 전역변수 - 파일안에서만 사용
static 함수() - 파일안에서만 사용

c++
static 함수,변수 클래스 내에 객체호출 상관없이 호출가능 this가 없다(전역변수,전역함수)